import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.SpringLayout;


public class Logging {
	boolean logExists = false;
	//method other classes us to add to the log
	public void appendLog (String action){

	
		//creates log directory
		String dirPath = System.getProperty("user.home") + File.separator + ".vamix";
		File logFile = new File(dirPath + File.separator + "log.txt");
		
		File directory = new File(dirPath);	
		//if directory and file does not already exist, then create them
		if (!directory.exists()) {
			logFile.getParentFile().mkdir();
			try {
				logFile.createNewFile();
			} catch (IOException e) {
			
				e.printStackTrace();
			}
		}

			int lineCount =0;

		BufferedReader readIn;
		try {
			readIn = new BufferedReader(new FileReader(logFile.getAbsoluteFile()));
			while(readIn.readLine() != null) {
				lineCount++;
			}
		} catch (FileNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String numLines = "00";


		if(lineCount == 0){
			numLines = "00" ;
		}
		else if(lineCount <=10){
			lineCount --;
			numLines = ("0" + lineCount);
		} else{
			lineCount --;
			numLines = (Integer.toString(lineCount));
		}



		//append details to the log
		BufferedWriter writer;
		try {
			writer = new BufferedWriter(new FileWriter(logFile.getAbsolutePath(), true));
			writer.newLine();
			SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy HH:mm");          
			Date date = new Date();
			String now = sdf.format(date);
			writer.write(numLines + " " + action + " " + now );
			writer.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}



	}


	//creates the gui for the log tab
	public void log (final JTabbedPane gui){
	
		JPanel panel = new JPanel(false);
		 //Add Textarea in to middle panel
	 
		
		panel.setLayout(new GridLayout(1, 1));
		panel.setPreferredSize(new Dimension(410, 200));
		gui.add("Log", panel);


		SpringLayout layout = new SpringLayout();
		panel.setLayout(layout);

		
		final JTextArea logDisplay = new JTextArea();
		
		logDisplay.setEditable(false); // set textArea non-editable
		JScrollPane  scroll = new JScrollPane(logDisplay);
		  scroll.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		   panel.add(scroll);
	
		
		JButton jbLog = new JButton("Display Log");
		jbLog.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				appendLog("Log");
				String dirPath = System.getProperty("user.home") + File.separator + ".vamix";
				File logFile = new File(dirPath + File.separator + "log.txt");

				BufferedReader readIn;
				StringBuffer sb = new StringBuffer();
				try {
					readIn = new BufferedReader(new FileReader(logFile.getAbsoluteFile()));
					String line = readIn.readLine();
					while (line != null) {
						sb.append(line);
						sb.append(System.lineSeparator());
						line = readIn.readLine();
					}
					String everything = sb.toString();
					logDisplay.setText(everything);
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}


			}
		});


		panel.add(jbLog);
		layout.putConstraint(SpringLayout.WEST, jbLog, 150, SpringLayout.WEST, panel);
		layout.putConstraint(SpringLayout.NORTH, jbLog, 15, SpringLayout.NORTH, panel);

		logDisplay.setEditable(false);
	//	panel.add(logDisplay);
		//logDisplay.setPreferredSize(new Dimension(390,150));
scroll.setPreferredSize(new Dimension(390,150));
		layout.putConstraint(SpringLayout.WEST, scroll, 10, SpringLayout.WEST, panel);
		layout.putConstraint(SpringLayout.NORTH, scroll, 40, SpringLayout.NORTH, panel);


	}


}




